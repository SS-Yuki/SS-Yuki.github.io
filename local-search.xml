<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Shell</title>
    <link href="/2024/08/06/Shell/"/>
    <url>/2024/08/06/Shell/</url>
    
    <content type="html"><![CDATA[<h1 id="Shell分类"><a href="#Shell分类" class="headerlink" title="Shell分类"></a>Shell分类</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>Windows has two command-line shells:</p><ul><li>the Command shell (cmd)</li><li>PowerShell<br>cmd可以运行win命令；PowerShell可以运行win命令和cmdlet命令。<br>cmd脚本语言<code>.bat</code>；PowerShell脚本语言<code>.ps1</code></li></ul><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>sh, csh, tcsh, bash, zsh, fish…<br><strong>Bash Shell</strong><br>1989 年首次发布，由 Brain Fox 为 GNU 项目编写的，目的是作为 Bourne Shell (sh) 的免费软件替代品，是大多数 Linux 发行版的默认 Shell 环境。<br>用户配置设置在 <code>.bashrc</code> 中。<br><strong>Z Shell</strong><br>1990 年由 Paul Falstad 发布，它具有 Bash、Korn Shell 和 C Shell 共有的一些功能，macOS 默认使用 Zsh Shell。<br>比 Bash 可配置度更高，有围绕 Z Shell 构建的框架（Oh My Zsh）。<br>用户配置设置在 <code>.zshrc</code> 中。<br><strong>Fish Shell</strong><br>2005 年由 Axel Liljencrantz 创建，不符合 POSIX shell 标准。<br>由于默认情况下 Fish 已经预置了很多配置，因此它被认为比 Zsh 等其他 <code>sh</code> 选项更适合初学者。</p><h1 id="自定义工具"><a href="#自定义工具" class="headerlink" title="自定义工具"></a>自定义工具</h1><p>查看&#x2F;切换shell</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 查看可用shell</span><br><span class="hljs-built_in">cat</span> /etc/shells                          <br><span class="hljs-comment"># /etc/shells: valid login shells</span><br>/bin/sh<br>/bin/bash<br>/usr/bin/bash<br>/bin/rbash<br>/usr/bin/rbash<br>/usr/bin/sh<br>/bin/dash<br>/usr/bin/dash<br>/usr/bin/tmux<br>/usr/bin/screen<br>/bin/zsh<br>/usr/bin/zsh<br><br><span class="hljs-comment"># 查看当前shell</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span>                                                            <br><br><span class="hljs-comment"># 可以通过包管理器安装zsh</span><br><span class="hljs-comment"># 切换成zsh</span><br>chsh -s $(<span class="hljs-built_in">which</span> zsh)<br></code></pre></td></tr></table></figure><p>一些主题中的部件需要特殊字体，下载使用使用Nerd字体。<br>Window：<a href="https://www.nerdfonts.com/">官网</a>下载MesloLG Nerd Font，将所有的<code>TrueType字体文件</code>右键进行安装。<br>MacOS&#x2F;Linux：脚本安装。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> https://github.com/ryanoasis/nerd-fonts.git --depth 1<br><span class="hljs-built_in">cd</span> nerd-fonts<br>./install.sh<br></code></pre></td></tr></table></figure><h2 id="Oh-my-zsh"><a href="#Oh-my-zsh" class="headerlink" title="Oh my zsh"></a>Oh my zsh</h2><p>适用于zsh。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 安装命令</span><br>sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span><br><br><span class="hljs-comment"># 卸载</span><br>uninstall_oh_my_zsh<br></code></pre></td></tr></table></figure><p>安装后<code>~/.zshrc</code>会改变，从而启动oh-my-zsh，此时终端如下：<br><img src="/2024/08/06/Shell/20240727220552.png"><br>之后可以下载主题和插件，一方面要将下载保存到<code>$ZSH_CUSTOM</code>(<del>&#x2F;.oh-my-zsh&#x2F;custom)，另一方面要在&#96;</del>&#x2F;.zshrc&#96;进行相应设置以生效。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 主题$ZSH_CUSTOM/themes，插件$ZSH_CUSTOM/plugins</span><br><span class="hljs-comment"># powerlevel10k主题  </span><br>git <span class="hljs-built_in">clone</span> https://github.com/romkatv/powerlevel10k.git <span class="hljs-variable">$ZSH_CUSTOM</span>/themes/powerlevel10k  <br><span class="hljs-comment"># zsh-autosuggestions自动提示插件  </span><br>git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions  <br><span class="hljs-comment"># zsh-syntax-highlighting语法高亮插件  </span><br>git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins/zsh-syntax-highlighting<br><br><span class="hljs-comment"># 对于p10k，需要进行自定义配置</span><br>p10k configure<br><br><span class="hljs-comment"># ~/.zshrc</span><br><span class="hljs-comment"># 修改主题  </span><br>ZSH_THEME=<span class="hljs-string">&quot;powerlevel10k/powerlevel10k&quot;</span>  <br><span class="hljs-comment"># 启用插件  </span><br>plugins=(  <br>  git  <br>  zsh-autosuggestions  <br>  zsh-syntax-highlighting  <br>)<br><br><span class="hljs-comment"># 更改配置后重载</span><br>omz reload<br></code></pre></td></tr></table></figure><p>效果展示：<br><img src="/2024/08/06/Shell/20240727222239.png"></p><h2 id="Zim"><a href="#Zim" class="headerlink" title="Zim"></a>Zim</h2><p>Zim 启动速度更快，相比 oh-my-zsh 更加轻量级，适用于zsh。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 安装命令</span><br>curl -fsSL https://raw.githubusercontent.com/zimfw/install/master/install.zsh | zsh<br></code></pre></td></tr></table></figure><p>安装后<code>~/.zshrc</code>会改变，而Zim的配置文件为<code>~/.zimrc</code>，在该文件中列出需要使用的插件（包括主题），比如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">zmodule romkatv/powerlevel10k<br>zmodule completion<br></code></pre></td></tr></table></figure><p>之后运行<code>zimfw install</code>来安装所需插件，与oh-my-zsh类似，同样需要配置<code>p10k</code>主题。<br>效果展示：<br><img src="/2024/08/06/Shell/a10ecc77e83dc75f2d949816f756846.png"></p><h2 id="Oh-my-posh"><a href="#Oh-my-posh" class="headerlink" title="Oh my posh"></a>Oh my posh</h2><p>可以用于多种shell。<br><img src="/2024/08/06/Shell/20240727223308.png"><br>可以在Windows中美化PowerShell的样式。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 安装命令</span><br>winget upgrade JanDeDobbeleer.OhMyPosh -s winget<br></code></pre></td></tr></table></figure><p>Windows中自带蓝色的Windows PowerShell，可以在Microsoft Store中下载黑色的PowerShell，本文使用黑色的PowerShell作为终端的默认shell。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 查看使用的shell</span><br>oh-my-posh get shell<br><br><span class="hljs-comment"># PowerShell配置脚本文件位置（类似~/.zshrc）</span><br>(base) PS C:\Users\kangy&gt; <span class="hljs-variable">$PROFILE</span><br>C:\Users\kangy\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1<br><span class="hljs-comment"># 编辑PowerShell配置文件脚本</span><br>notepad <span class="hljs-variable">$PROFILE</span><br><span class="hljs-comment"># 若文件不存在则创建</span><br>New-Item -Path <span class="hljs-variable">$PROFILE</span> -Type File -Force<br><span class="hljs-comment"># 在脚本中添加如下启动oh-my-posh并使主题生效</span><br>&amp; ([ScriptBlock]::Create((oh-my-posh init pwsh --config &quot;<span class="hljs-variable">$env</span>:POSH_THEMES_PATH\jandedobbeleer.omp.json&quot; --print) -join &quot;`n&quot;))<br><br><span class="hljs-comment"># 重载shell</span><br>. <span class="hljs-variable">$PROFILE</span><br></code></pre></td></tr></table></figure><p>效果展示：<br><img src="/2024/08/06/Shell/20240727225039.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Shell</tag>
      
      <tag>zsh</tag>
      
      <tag>oh-my-zsh</tag>
      
      <tag>zim</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
